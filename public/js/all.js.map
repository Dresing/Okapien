{"version":3,"sources":["main.js","notifications.js","error.js","post.js","infiniteScroll.js","get.js","filters.js"],"names":[],"mappingslEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var monthNames = [\"Januar\", \"Februar\", \"Marts\", \"April\", \"Maj\", \"Juni\",\r\n    \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"December\"\r\n];\r\n","function success(location, msg){\r\n   $(location).html('<div class=\"alert alert-success fade in\"> '+msg+' <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a></div>');\r\n}\r\nfunction info(location, msg){\r\n    $(location).html('<div class=\"alert alert-info fade in\"> '+msg+' <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a></div>');\r\n}\r\nfunction warning(location, msg){\r\n    $(location).html('<div class=\"alert alert-warning fade in\"> '+msg+' <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a></div>');\r\n}\r\n\r\nfunction danger(location, msg){\r\n    $(location).html('<div class=\"alert alert-danger fade in\"> '+msg+' <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a></div>');\r\n}","function quickModal(title, resp, type){\r\n\r\n    if (typeof type === 'undefined') {\r\n        type = \"danger\";\r\n    }\r\n    if (typeof title === 'undefined') {\r\n        title = \"Fejl\";\r\n    }\r\n    if (typeof resp === 'undefined') {\r\n        resp = \"Der skete en intern fejl.\";\r\n    }\r\n    var randId = Math.random().toString(36).substr(2);\r\n    $('html').append('<div id=\"'+randId+'\" class=\"modal modal-'+type+'\">' +\r\n        '<div class=\"modal-dialog\">' +\r\n        '<div class=\"modal-content\">' +\r\n        '<div class=\"modal-header\">' +\r\n        '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">' +\r\n        '<span aria-hidden=\"true\">×</span></button>' +\r\n        '<h4 class=\"modal-title\">'+title+'</h4>' +\r\n        '</div>' +\r\n        '<div class=\"modal-body\">' +\r\n        '<p>'+resp+'</p>' +\r\n        '</div>' +\r\n        '<div class=\"modal-footer\">' +\r\n        '<button type=\"button\" class=\"btn btn-outline\" data-dismiss=\"modal\">Luk</button>' +\r\n        '</div>' +\r\n        '</div>' +\r\n        '</div>' +\r\n        '</div>');\r\n    $('#'+randId).modal('toggle');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","function modalPost(button){\r\n    var modal = $($(button).data('target'));\r\n    var form = $(modal.data('form'));\r\n    $.ajax({\r\n        method: 'post',\r\n        url: form.find('input[name=\"target\"]').val(),\r\n        dataType: 'json',\r\n        data: form.serializeArray(),\r\n        type: 'post',\r\n        error: function() {\r\n            warning(modal.find('.response'), \"Der skete en fejl.\");\r\n        },\r\n        success: function(data) {\r\n            console.log(data.test);\r\n            modal.modal('toggle');\r\n            location.reload();\r\n        },\r\n    });\r\n}\r\n/**\r\n * Submits a form on a page with POST and handles the response.\r\n * The form makes some assumptions in how the form should look. In particular,\r\n * the form should have two mandatory fields: target and CRSF which will handle where to send the request and\r\n * handles the CRSF-token mechanism. All other fields are optional and will be send along the request. The values\r\n * be accessed in the backend with the name specified in the \"name\"-field as usual.\r\n *\r\n * @param formId Id of the form to submit\r\n * @param additional an array of fields that should be added to the request not specified in the form.\r\n * @param success In case of a successful request, this passed function will be executed.\r\n * @param failed In case of a failed request, this passed function will be executed.\r\n */\r\nfunction formPost(formId, additional, success, failed){;\r\n    var form = $(formId);\r\n    var data = form.serializeArray();\r\n    if (typeof additional === 'undefined') {\r\n        additional = {};\r\n    }\r\n    data.push(additional);\r\n    $.ajax({\r\n        method: 'post',\r\n        url: form.find('input[name=\"target\"]').val(),\r\n        dataType: 'json',\r\n        data: data,\r\n        type: 'post',\r\n        error: function(xhr, status, error) {\r\n            if (typeof failed !== 'undefined') {\r\n                failed();\r\n            }else{\r\n                quickModal('Server fejl', error, 'danger');\r\n            }\r\n\r\n        },\r\n        success: function(resp) {\r\n            if(resp['status'] !== 'success'){\r\n                if (typeof failed !== 'undefined') {\r\n                    failed();\r\n                }else{\r\n                    quickModal('Adgang nægtet.', 'Der skete en fejl da du prøvede at få adgang.', 'warning');\r\n                }\r\n            }else{\r\n                if (typeof success !== 'undefined') {\r\n                    success();\r\n                }\r\n            }\r\n        },\r\n    });\r\n}","function infiniteScroll(id, insert){\r\n    var target = $($(id).data('target'));\r\n    if(!$(id).data('tapped')) {\r\n        if($(id).children('i').length <= 0) {\r\n            getCall(id, {}, function (resp) {\r\n                if (!jQuery.isEmptyObject(resp['data'])) {\r\n                    insert(resp['data'], target);\r\n                    var skip = parseInt($(id + ' input[name=skip]').val(), 10);\r\n                    var take = parseInt($(id + ' input[name=take]').val(), 10);\r\n                    $(id + ' input[name=skip]').val(skip + take);\r\n                }\r\n                else {\r\n                    $(id).data('tapped', true);\r\n                    $(id).hide();\r\n                    console.log('empty');\r\n                }\r\n                target.append($(id));\r\n            });\r\n        }\r\n    }\r\n}","/**\r\n * Submits a form on a page with POST and handles the response.\r\n * The form makes some assumptions in how the form should look. In particular,\r\n * the form should have two mandatory fields: target and CRSF which will handle where to send the request and\r\n * handles the CRSF-token mechanism. All other fields are optional and will be send along the request. The values\r\n * be accessed in the backend with the name specified in the \"name\"-field as usual.\r\n *\r\n * @param formId Id of the form to submit\r\n * @param additional an array of fields that should be added to the request not specified in the form.\r\n * @param success In case of a successful request, this passed function will be executed.\r\n * @param failed In case of a failed request, this passed function will be executed.\r\n */\r\nfunction getCall(formId, additional, success, failed) {\r\n    var target = $($(formId).data('target'));\r\n    $(formId).append('<i id=\"infiniteLoad\" class=\"fa fa-refresh fa-spin button-text\"></i>');\r\n\r\n    var form = $(formId);\r\n    var data = form.serializeArray();\r\n    if (typeof additional === 'undefined') {\r\n        additional = {};\r\n    }\r\n    data.push(additional);\r\n    $.ajax({\r\n        method: 'GET',\r\n        url: form.find('input[name=\"target\"]').val(),\r\n        dataType: 'json',\r\n        data: data,\r\n        type: 'GET',\r\n        error: function(xhr, status, error) {\r\n            if (typeof failed !== 'undefined') {\r\n                failed();\r\n            }else{\r\n                quickModal('Server fejl', error, 'danger');\r\n            }\r\n            $(formId + ' #infiniteLoad').remove();\r\n        },\r\n        success: function(resp) {\r\n            if(resp['status'] !== 'success'){\r\n                if (typeof failed !== 'undefined') {\r\n                    failed(target);\r\n                }else{\r\n                    quickModal('Adgang nægtet.', 'Der skete en fejl da du prøvede at få adgang.', 'warning');\r\n                }\r\n            }else{\r\n                if (typeof success !== 'undefined') {\r\n                    success(resp, target);\r\n                }\r\n            }\r\n            $(formId + ' #infiniteLoad').remove();\r\n        }\r\n    });\r\n}","//Call this function before outputting content\r\nfunction e(text) {\r\n    var map = {\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#039;'\r\n    };\r\n\r\n    return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n}"],"sourceRoot":"/source/"}